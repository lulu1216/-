Given an integer array nums, find the sum of the elements between indices i and j (i ¡Ü j), inclusive.

Example:
Given nums = [-2, 0, 3, -5, 2, -1]

sumRange(0, 2) -> 1
sumRange(2, 5) -> -1
sumRange(0, 5) -> -3

public class NumArray {
    public static int[] numSum;
    public NumArray(int[] nums) {
        numSum = new int[nums.length];
            if(nums.length>0){
                numSum[0]=nums[0];
                for(int i = 1;i<nums.length;i++){
                numSum[i]=numSum[i-1]+nums[i];
            }
        }
       
    }
    public int sumRange(int i, int j) {
        if(i==0){
            return numSum[j];
        }
        return numSum[j]-numSum[i-1];
    }
}

/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray obj = new NumArray(nums);
 * int param_1 = obj.sumRange(i,j);
 */